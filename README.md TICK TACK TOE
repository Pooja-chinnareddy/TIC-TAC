''' EXAMPLE OUTPUT:-Welcome to Tic Tac Toe!

 |   |  
-----
 |   |  
-----
 |   |  

Player X, enter the row (0, 1, or 2): 0
Player X, enter the column (0, 1, or 2): 0

X |   |  
-----
 |   |  
-----
 |   |  

Player O, enter the row (0, 1, or 2): 1
Player O, enter the column (0, 1, or 2): 1

X |   |  
-----
O |   |  
-----
 |   |  

Player X, enter the row (0, 1, or 2): 0
Player X, enter the column (0, 1, or 2): 1

X | X |  
-----
O |   |  
-----
 |   |  

Player O, enter the row (0, 1, or 2): 2
Player O, enter the column (0, 1, or 2): 0

X | X |  
-----
O |   |  
-----
O |   |  

Player X, enter the row (0, 1, or 2): 0
Player X, enter the column (0, 1, or 2): 2

X | X | X
-----
O |   |  
-----
O |   |  

Player X wins!
'''
# TIC-TAC
# Function to print the game board
def print_board(board):
    print("\n")
    for row in board:
        print(" | ".join(row))
        print("-" * 5)

# Function to check if a player has won
def check_win(board, player):
    # Check rows, columns, and diagonals for a win
    for row in board:
        if all([cell == player for cell in row]):
            return True

    for col in range(3):
        if all([board[row][col] == player for row in range(3)]):
            return True

    if all([board[i][i] == player for i in range(3)]) or all([board[i][2-i] == player for i in range(3)]):
        return True
    
    return False

# Function to check if the board is full (no more moves possible)
def is_full(board):
    return all([cell != " " for row in board for cell in row])

# Function to handle the Tic Tac Toe game
def tic_tac_toe():
    board = [[" " for _ in range(3)] for _ in range(3)]  # Initialize empty board
    current_player = "X"
    
    print("Welcome to Tic Tac Toe!")
    
    while True:
        print_board(board)
        
        # Get the user's move
        try:
            row = int(input(f"Player {current_player}, enter the row (0, 1, or 2): "))
            col = int(input(f"Player {current_player}, enter the column (0, 1, or 2): "))
        except ValueError:
            print("Invalid input. Please enter numbers for row and column.")
            continue
        
        if row not in range(3) or col not in range(3) or board[row][col] != " ":
            print("Invalid move. The cell is either out of bounds or already taken.")
            continue
        
        # Make the move
        board[row][col] = current_player
        
        # Check for a winner
        if check_win(board, current_player):
            print_board(board)
            print(f"Player {current_player} wins!")
            break
        
        # Check if the board is full (draw)
        if is_full(board):
            print_board(board)
            print("It's a tie!")
            break
        
        # Switch players
        current_player = "O" if current_player == "X" else "X"

# Start the game
if __name__ == "__main__":
    tic_tac_toe()
